# Generated by Django 4.2.11 on 2025-08-11 19:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EconomicScenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plaintiff', models.CharField(blank=True, max_length=255)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('date_of_injury', models.DateField(blank=True, null=True)),
                ('report_date', models.DateField(blank=True, null=True)),
                ('residence', models.CharField(blank=True, max_length=255)),
                ('csa', models.CharField(blank=True, max_length=255, verbose_name='Combined Statistical Area')),
                ('education', models.CharField(blank=True, max_length=255)),
                ('marital_status', models.CharField(blank=True, max_length=100)),
                ('label', models.CharField(default='Base Case', max_length=255)),
                ('display_decimals', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)])),
                ('jurisdiction_preset', models.CharField(default='custom', max_length=50)),
                ('growth_timing', models.CharField(choices=[('eoy', 'End-of-Year'), ('mid', 'Mid-Year'), ('cont', 'Continuous (e^rt)')], default='eoy', max_length=10)),
                ('discount_timing', models.CharField(choices=[('mid', 'Period Midpoint'), ('eoy', 'Year-End')], default='mid', max_length=10)),
                ('day_count_basis', models.CharField(choices=[('3652425', 'Actual/365.2425'), ('365', 'Actual/365'), ('actact', 'Actual/Actual')], default='3652425', max_length=10)),
                ('discount_post_injury', models.BooleanField(default=True)),
                ('is_pediatric', models.BooleanField(default=False)),
                ('starting_age', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(14), django.core.validators.MaxValueValidator(33)])),
                ('workforce_entry_date', models.DateField(blank=True, null=True)),
                ('ramp_year1', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('ramp_year2', models.DecimalField(decimal_places=2, default=50, max_digits=5)),
                ('ramp_year3', models.DecimalField(decimal_places=2, default=100, max_digits=5)),
                ('base_annual_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('offset_annual_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('past_growth_base', models.DecimalField(decimal_places=2, default=3.1, max_digits=5)),
                ('future_growth_base', models.DecimalField(decimal_places=2, default=3.8, max_digits=5)),
                ('past_growth_offset', models.DecimalField(decimal_places=2, default=3.1, max_digits=5)),
                ('future_growth_offset', models.DecimalField(decimal_places=2, default=3.8, max_digits=5)),
                ('discount_rate', models.DecimalField(decimal_places=2, default=3.25, max_digits=5)),
                ('life_expectancy', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('work_life_expectancy', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('retirement_age', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('years_to_final_separation', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('wlf', models.DecimalField(decimal_places=2, default=81.4, max_digits=5, verbose_name='Work-Life Factor (%)')),
                ('uf', models.DecimalField(decimal_places=2, default=2.1, max_digits=5, verbose_name='Unemployment Factor (%)')),
                ('tr', models.DecimalField(decimal_places=2, default=16.99, max_digits=5, verbose_name='Combined Effective Tax (%)')),
                ('fb', models.DecimalField(decimal_places=2, default=30.0, max_digits=5, verbose_name='Fringe Benefits (%)')),
                ('pc_past', models.DecimalField(decimal_places=2, default=25, max_digits=5, verbose_name='Personal Consumption - Past (%)')),
                ('pc_future', models.DecimalField(decimal_places=2, default=20, max_digits=5, verbose_name='Personal Consumption - Future (%)')),
                ('assumptions', models.TextField(blank=True)),
                ('calculation_results', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenarios', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='CalculationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('pre_injury_total', models.DecimalField(decimal_places=2, max_digits=15)),
                ('post_injury_total', models.DecimalField(decimal_places=2, max_digits=15)),
                ('post_injury_present_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('grand_total', models.DecimalField(decimal_places=2, max_digits=15)),
                ('pre_injury_table', models.JSONField()),
                ('post_injury_table', models.JSONField()),
                ('factors', models.JSONField()),
                ('calculated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calculation_history', to='calculator.economicscenario')),
            ],
            options={
                'ordering': ['-calculated_at'],
            },
        ),
        migrations.CreateModel(
            name='ActualEarnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actual_earnings', to='calculator.economicscenario')),
            ],
            options={
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='ManualOffsetEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('is_locked', models.BooleanField(default=False)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manual_offsets', to='calculator.economicscenario')),
            ],
            options={
                'ordering': ['year'],
                'unique_together': {('scenario', 'year')},
            },
        ),
        migrations.AddIndex(
            model_name='economicscenario',
            index=models.Index(fields=['user', '-updated_at'], name='calculator__user_id_35870e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='actualearnings',
            unique_together={('scenario', 'year')},
        ),
    ]
