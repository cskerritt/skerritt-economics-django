# Generated by Django 4.2.11 on 2025-08-18 15:44

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referrer_name', models.CharField(max_length=100)),
                ('referrer_email', models.EmailField(max_length=254)),
                ('referrer_phone', models.CharField(max_length=20)),
                ('referrer_firm', models.CharField(blank=True, max_length=200)),
                ('referrer_title', models.CharField(blank=True, help_text='e.g., Partner, Associate', max_length=100)),
                ('referrer_location', models.CharField(help_text='City, State', max_length=100)),
                ('referral_type', models.CharField(choices=[('attorney_to_expert', 'Attorney Seeking Expert'), ('attorney_to_attorney', 'Attorney to Attorney'), ('client_needs_expert', 'Client Needs Expert'), ('expert_collaboration', 'Expert Collaboration'), ('other', 'Other')], max_length=50)),
                ('case_type', models.CharField(choices=[('personal_injury', 'Personal Injury'), ('wrongful_death', 'Wrongful Death'), ('medical_malpractice', 'Medical Malpractice'), ('employment', 'Employment Litigation'), ('business_valuation', 'Business Valuation'), ('commercial_dispute', 'Commercial Dispute'), ('divorce', 'Divorce/Family Law'), ('insurance', 'Insurance Dispute'), ('construction', 'Construction Defect'), ('intellectual_property', 'Intellectual Property'), ('other', 'Other')], max_length=50)),
                ('case_caption', models.CharField(blank=True, help_text='Case name if applicable', max_length=200)),
                ('court_jurisdiction', models.CharField(blank=True, max_length=200)),
                ('case_number', models.CharField(blank=True, max_length=100)),
                ('expert_needed_for', models.TextField(help_text='Describe what expert services are needed')),
                ('opposing_expert', models.CharField(blank=True, help_text='Name of opposing expert if known', max_length=200)),
                ('urgency', models.CharField(choices=[('urgent', 'Urgent - Need within 1 week'), ('soon', 'Soon - Need within 1 month'), ('planning', 'Planning - Need within 3 months'), ('exploring', 'Exploring options')], max_length=50)),
                ('trial_date', models.CharField(blank=True, help_text='Trial/arbitration date if scheduled', max_length=100)),
                ('discovery_deadline', models.CharField(blank=True, max_length=100)),
                ('damages_estimate', models.CharField(blank=True, help_text='Estimated damages range', max_length=100)),
                ('case_description', models.TextField(help_text='Brief description of the case and economic issues')),
                ('specific_requirements', models.TextField(blank=True, help_text='Any specific requirements or preferences')),
                ('preferred_contact_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('either', 'Either')], default='either', max_length=20)),
                ('best_time_to_contact', models.CharField(blank=True, max_length=100)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('processed', models.BooleanField(default=False)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('internal_notes', models.TextField(blank=True, help_text='Internal notes (not shown to referrer)')),
            ],
            options={
                'verbose_name': 'Expert Referral',
                'verbose_name_plural': 'Expert Referrals',
                'ordering': ['-created_date'],
            },
        ),
    ]
